[project]
name = "pay-viewer"
version = "0.0.0"
requires-python = "==3.12.*"
dependencies = [
    "pandas>=2.2.2",
    "tabula-py[jpype]>=2.9.3",
    "openpyxl>=3.1.5",
    "PySide6>=6.7.2",
    "selenium>=4.22.0",
    "PythonQwt>=0.12.5",
    "guilib @ file:///${PROJECT_ROOT}/../guilib",
]

[project.urls]
Homepage = "https://github.com/ZeeD/pay-viewer"
Repository = "https://github.com/ZeeD/pay-viewer.git"

[tool.pdm]
distribution = true

[project.optional-dependencies]
dev = [
    "mypy>=1.10.1",
    "ruff>=0.5.0",
    "coverage>=7.5.4",
    "pandas-stubs>=2.2.2.240603",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project.gui-scripts]
pay-viewer = "payviewer.mainui:main"

[tool.mypy]
mypy_path = ["src", "tests", "demo", "stubs"]
strict = true
warn_unused_configs = true
[[tool.mypy.overrides]]
module = ["payviewer.automation", "payviewer.automation_cu"]
disable_error_code = "no-untyped-call"

[tool.ruff]
fix = true
line-length = 80
src = ["src", "tests", "demo", "stubs"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "single"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # disabled by me
    "D1","ANN1","PT009","PT027","PD",
    # temp
    "TCH001", "TCH002", "TCH003",
    # incompatibilities
    "D203", # D211
    "D213", # D212
    "S603", # S602
    # conflicts with formatter
    "COM812","ISC001","Q001","Q002"
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "single"
inline-quotes = "single"
multiline-quotes = "single"

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true

[tool.ruff.lint.isort]
force-single-line = true

[tool.coverage.run]
branch = true
source = ["src", "tests"]

[tool.coverage.report]
show_missing = true
sort = "Cover"
skip_empty = true

[tool.pdm.scripts]
_.env = { PYTHONPATH = "src:tests:demo:stubs" }
lint = { composite = [
    "ruff format .",
    "ruff check --exit-zero .",
    "dmypy run .",
]}
tests = { composite = [
    "coverage run -m unittest discover --verbose --locals --failfast --catch --start-directory tests",
    "coverage report",
    "coverage erase"
]}
