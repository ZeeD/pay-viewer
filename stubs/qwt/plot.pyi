from typing import overload

from PySide6.QtCore import Qt
from PySide6.QtWidgets import QFrame
from PySide6.QtWidgets import QWidget

from qwt.legend import QwtAbstractLegend
from qwt.plot_canvas import QwtPlotCanvas
from qwt.scale_div import QwtScaleDiv
from qwt.scale_draw import QwtScaleDraw
from qwt.scale_map import QwtScaleMap

class QwtPlot(QFrame):
    xBottom: int
    yLeft: int
    LeftLegend: int
    RightLegend: int
    BottomLegend: int
    TopLegend: int

    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, /, title: str) -> None: ...
    @overload
    def __init__(self, /, parent: QWidget | None) -> None: ...
    @overload
    def __init__(
        self, /, title: str | QWidget | None = ..., parent: QWidget | None = ...
    ) -> None: ...
    def setAxisScaleDiv(self, axisId: int, scaleDiv: QwtScaleDiv) -> None: ...
    def setAxisScaleDraw(
        self, axisId: int, scaleDraw: QwtScaleDraw
    ) -> None: ...
    def axisScaleDiv(self, axisId: int) -> QwtScaleDiv: ...
    def axisScaleDraw(self, axisId: int) -> QwtScaleDraw: ...
    def replot(self) -> None: ...
    def setCanvasBackground(self, brush: Qt.GlobalColor) -> None: ...
    def setAxisScale(
        self, axisId: int, min_: float, max_: float, stepSize: float = 0
    ) -> None: ...
    def canvas(self) -> QwtPlotCanvas: ...
    def insertLegend(
        self,
        legend: QwtAbstractLegend,
        pos: int | None = ...,
        ratio: float = ...,
    ) -> None: ...
    def legend(self) -> QwtAbstractLegend: ...
    def canvasMap(self, axisId: int) -> QwtScaleMap: ...
